; ArraySum: find the maximum element of an array

; The program is given
;   *  a natural number n, assume n>0
;   *  an n-element array x[0], x[1], ..., x[n-1]
;  It calculates
;   * sum = the sum of elements of x

; Since n>0, the array x contains at least one
;  element.

; program ArraySum
;   sum := x[0]
;   for i := 1 to n-1 step 1
;       sum := sum + x[i]

; Register usage
;   R2 = n
;   R3 = i
;   R4 = sum

; Initialise

start load  R2,n[R0]      ; R2 = n
      lea   R3,1[R0]      ; R3 = i = 1
      load  R4,x[R0]      ; R4 = sum = x[0]

; Top of loop, determine whether to remain in loop

loop
      cmplt R5,R3,R2      ; R5 = (i<n)
      jumpf R5,done[R0]   ; if i>=n then goto done

      loadxi R5,x[R3]      ; R5 = x[i++]

      add   R4,R4,R5      ; sum := sum + x[i]

; Bottom of loop, increment loop index

next   jump  loop[R0]     ; go to top of loop
            
; Exit from loop

done   store R4,sum[R0]   ; sum = R4
       trap  R0,R0,R0     ; terminate

; Data area
n        data   6
sum      data   0
x        data  18
         data   3
         data  21
         data  -2
         data  40
         data  25
